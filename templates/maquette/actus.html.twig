{% extends 'maquette/layout.html.twig' %}


{% block javascripts %}
    <script>
        var x, i, j, l, ll, selElmnt, a, b, c;
        /* Look for any elements with the class "custom-select": */
        x = document.getElementsByClassName("custom-select");
        l = x.length;
        for (i = 0; i < l; i++) {
            selElmnt = x[i].getElementsByTagName("select")[0];
            ll = selElmnt.length;
            /* For each element, create a new DIV that will act as the selected item: */
            a = document.createElement("DIV");
            a.setAttribute("class", "select-selected");
            a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
            x[i].appendChild(a);
            /* For each element, create a new DIV that will contain the option list: */
            b = document.createElement("DIV");
            b.setAttribute("class", "select-items select-hide");
            for (j = 1; j < ll; j++) {
                /* For each option in the original select element,
                create a new DIV that will act as an option item: */
                c = document.createElement("DIV");
                c.innerHTML = selElmnt.options[j].innerHTML;
                c.addEventListener("click", function(e) {
                    /* When an item is clicked, update the original select box,
                    and the selected item: */
                    var y, i, k, s, h, sl, yl;
                    s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                    sl = s.length;
                    h = this.parentNode.previousSibling;
                    for (i = 0; i < sl; i++) {
                        if (s.options[i].innerHTML == this.innerHTML) {
                            s.selectedIndex = i;
                            h.innerHTML = this.innerHTML;
                            y = this.parentNode.getElementsByClassName("same-as-selected");
                            yl = y.length;
                            for (k = 0; k < yl; k++) {
                                y[k].removeAttribute("class");
                            }
                            this.setAttribute("class", "same-as-selected");
                            break;
                        }
                    }
                    h.click();
                });
                b.appendChild(c);
            }
            x[i].appendChild(b);
            a.addEventListener("click", function(e) {
                /* When the select box is clicked, close any other select boxes,
                and open/close the current select box: */
                e.stopPropagation();
                closeAllSelect(this);
                this.nextSibling.classList.toggle("select-hide");
                this.classList.toggle("select-arrow-active");
            });
        }

        function closeAllSelect(elmnt) {
            /* A function that will close all select boxes in the document,
            except the current select box: */
            var x, y, i, xl, yl, arrNo = [];
            x = document.getElementsByClassName("select-items");
            y = document.getElementsByClassName("select-selected");
            xl = x.length;
            yl = y.length;
            for (i = 0; i < yl; i++) {
                if (elmnt == y[i]) {
                    arrNo.push(i)
                } else {
                    y[i].classList.remove("select-arrow-active");
                }
            }
            for (i = 0; i < xl; i++) {
                if (arrNo.indexOf(i)) {
                    x[i].classList.add("select-hide");
                }
            }
        }

        /* If the user clicks anywhere outside the select box,
        then close all select boxes: */
        document.addEventListener("click", closeAllSelect);
    </script>

{% endblock %}

{% block stylesheets %}
    <style>
        .card-actions {
            display: flex;
            align-content: end;
            justify-content: space-between;
            padding: 2rem;
        }


        .card-title {
            font-size: 40px !important;
            font-weight: bold !important;
        }

        .card-date {
            font-size: 35px !important;
            font-weight: bold !important;
        }

        .card-subtitle {
            font-size: 30px !important;
            font-weight: normal;
        }

        .card-hour {
            font-size: 30px !important;
        }

        .date {
            font-size: 35px !important;
            font-weight: bold !important;
        }

        .hour {
            font-size: 30px !important;
        }

        @media (max-width: 991px) {
            .card-container {
                padding : 30px 160px 30px 160px !important;
            }
        }

        @media (min-width: 992px) {
            .card-container {
                padding : 20px 40px 20px 40px !important;
            }
        }

    </style>

{% endblock %}
{% block body %}

    <!-- VOIR AUSSI -->
    <div class="px-lg-5">
        <div class="row">
            <div class="px-lg-5 pt-5 row">
                <h1 class="px-0 col-lg-3 col-md-6 col-sm-12 big-subtitle blue-title">{{ page_title | upper }}</h1>
                <div class="px-0 custom-select col-lg-4 col-md-6 col-sm-12 d-flex align-items-end">
                    <select class="text-uppercase col-4 rounded-0 fs-2">
                        <option class="" selected>toutes les actualités &nbsp ></option>

                        {% for actu in themes_actu %}
                            <option value={{ actu }}>{{ actu }}</option>
                        {% endfor %}
                    </select>
                </div>
            </div>

            {% for actu in actu_childs.elements %}

                <!-- Récupération des datas de l'article -->
                {{  actu.element.getDatas(locale) }}
                {% set media = actu.element.getMedia(1) %}

                <div class="col-lg-4 col-md-12 py-lg-5 px-0">
                    <!-- Card-Actu -->
                    <div class="card mb-3 mx-lg-4 shadow-lg rounded-0 h-100">
                        <!-- Image -->

                        {% if media is not null %}
                            {% set url = '/assets/images/' ~ media.media %}
                            <img src="{{ asset((url)) }}" class="card-img-top rounded-0" alt="...">
                        {% endif %}
                        <div class="pt-0 ">

                            <!-- Themes -->
                            <div class="row  mx-0 px-0">
                                    <div class="col-5 theme-1 text-uppercase"  style="background-color: {{ actu.element.themeBackColor }};color: {{ actu.element.themeTextColor }};">
                                        {% set themes = actu.element.themes %}
                                        {% for theme in themes %}
                                            {{ theme.name }}
                                        {% endfor %}
                                    </div>
                            </div>

                            <!-- CARD CONTAINER -->
                            <div class="card-container">
                                <!-- Titre -->
                                <h5 class="card-title my-3 pt-5 fs-2">
                                    {{ actu.element.title }}
                                </h5>
                                <!-- CONTENU -->
                                <div class="card-text fs-4">
                                    {{ actu.element.content | raw }}
                                </div>

                                <!-- Boutons LIRE LA SUITE et lien Billetterie -->
                                <div class="card-actions px-0 pt-0 d-flex align-items-end">
                                    <button class="btn border rounded-0 border-dark fs-3" style="height: 60px">LIRE LA SUITE</button>
                                    <a href="https://billetterie.lalune.net/">
                                        <img src="{{ asset(('build/maquette/images/BILLETTERIE.png')) }}" alt="...">
                                    </a>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>

            {% endfor %}
        </div>
    </div>


{% endblock %}
